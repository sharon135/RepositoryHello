<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gxr.com.dao.UserMapper">
   <!-- 二级缓存 -->
	<resultMap id="BaseResultMap" type="com.gxr.com.entity.User">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="firstname" property="firstname" jdbcType="VARCHAR" />
		<result column="lastname" property="lastname" jdbcType="VARCHAR" />
		<result column="full_name" property="fullName" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="birthday" property="birthday" jdbcType="DATE" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="country" property="country" jdbcType="VARCHAR" />
		<result column="language" property="language" jdbcType="VARCHAR" />
		<result column="zone_id" property="zoneId" jdbcType="INTEGER" />
		<result column="brief" property="brief" jdbcType="VARCHAR" />
		<result column="roles" property="roles" jdbcType="VARCHAR" />
		<result column="original_url" property="originalUrl" jdbcType="VARCHAR" />
		<result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
		<result column="postcode" property="postcode" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="identity" property="identity" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="comefrom" property="comefrom" jdbcType="VARCHAR" />
		<result column="comment" property="comment" jdbcType="VARCHAR" />
		<result column="profile" property="profile" jdbcType="VARCHAR" />
		<result column="hobby" property="hobby" jdbcType="VARCHAR" />
		<result column="lastlogin_time" property="lastloginTime" jdbcType="TIMESTAMP"/>
		<result column="ucuserid" property="ucUserId" jdbcType="INTEGER"/>	
	</resultMap>
	<sql id="Base_Column_List">
		user_id, password, nickname, firstname, lastname,
		full_name, sex, birthday,
		phone,
		email, country, language, zone_id,
		brief, roles, original_url, image_url,
		postcode,
		address, create_time,
		update_time, identity, state, comefrom, comment,
		profile, hobby,
		lastlogin_time,ucuserid
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from us_user
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<select id="selectByPhone" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from us_user
		where phone = #{phone,jdbcType=VARCHAR}
	</select>
	<select id="findAllUserExcept" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from us_user
	</select>
	<select id="selectByUserIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from us_user
		where 1=1
		<if test="userIds != null">
			and
			user_id in
			<foreach collection="userIds" index="index" item="ss" open="("
				close=")" separator=",">
				${ss}
			</foreach>
		</if>
		<if test="userIds == null">
			and 1=-1;
		</if>
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		us_user
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.gxr.com.entity.User">
		insert into us_user (
		password, nickname,
		firstname, lastname, full_name,
		sex, birthday,
		phone,
		email, country, language,
		zone_id, brief, roles,
		original_url,
		image_url, postcode,
		address, create_time, update_time,
		identity, state,
		comefrom,
		comment, profile, hobby,
		lastlogin_time,ucuserid)
		values
		(#{password,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR},
		#{firstname,jdbcType=VARCHAR},
		#{lastname,jdbcType=VARCHAR},
		#{fullName,jdbcType=VARCHAR},
		#{sex,jdbcType=INTEGER},
		#{birthday,jdbcType=DATE},
		#{phone,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{country,jdbcType=VARCHAR},
		#{language,jdbcType=VARCHAR},
		#{zoneId,jdbcType=INTEGER},
		#{brief,jdbcType=VARCHAR},
		#{roles,jdbcType=VARCHAR},
		#{originalUrl,jdbcType=VARCHAR},
		#{imageUrl,jdbcType=VARCHAR},
		#{postcode,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},
		#{identity,jdbcType=INTEGER},
		#{state,jdbcType=INTEGER},
		#{comefrom,jdbcType=VARCHAR},
		#{comment,jdbcType=VARCHAR},
		#{profile,jdbcType=VARCHAR},
		#{hobby,jdbcType=VARCHAR},
		#{lastloginTime,jdbcType=TIMESTAMP},
		#{ucUserId,jdbcType=INTEGER},
		)
	</insert>
	<insert id="insertSelective" parameterType="com.gxr.com.entity.User">
		insert into us_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="nickname != null">
				nickname,
			</if>
			<if test="firstname != null">
				firstname,
			</if>
			<if test="lastname != null">
				lastname,
			</if>
			<if test="fullName != null">
				full_name,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="country != null">
				country,
			</if>
			<if test="language != null">
				language,
			</if>
			<if test="zoneId != null">
				zone_id,
			</if>
			<if test="brief != null">
				brief,
			</if>
			<if test="roles != null">
				roles,
			</if>
			<if test="originalUrl != null">
				original_url,
			</if>
			<if test="imageUrl != null">
				image_url,
			</if>
			<if test="postcode != null">
				postcode,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="identity != null">
				identity,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="comefrom != null">
				comefrom,
			</if>
			<if test="comment != null">
				comment,
			</if>
			<if test="profile != null">
				profile,
			</if>
			<if test="hobby != null">
				hobby,
			</if>
			<if test="lastloginTime != null">
				lastlogin_time,
			</if>
			<if test="ucUserId != null">
				ucuserid,
			</if>
			
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="firstname != null">
				#{firstname,jdbcType=VARCHAR},
			</if>
			<if test="lastname != null">
				#{lastname,jdbcType=VARCHAR},
			</if>
			<if test="fullName != null">
				#{fullName,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=INTEGER},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=DATE},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="country != null">
				#{country,jdbcType=VARCHAR},
			</if>
			<if test="language != null">
				#{language,jdbcType=VARCHAR},
			</if>
			<if test="zoneId != null">
				#{zoneId,jdbcType=INTEGER},
			</if>
			<if test="brief != null">
				#{brief,jdbcType=VARCHAR},
			</if>
			<if test="roles != null">
				#{roles,jdbcType=VARCHAR},
			</if>
			<if test="originalUrl != null">
				#{originalUrl,jdbcType=VARCHAR},
			</if>
			<if test="imageUrl != null">
				#{imageUrl,jdbcType=VARCHAR},
			</if>
			<if test="postcode != null">
				#{postcode,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="identity != null">
				#{identity,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="comefrom != null">
				#{comefrom,jdbcType=VARCHAR},
			</if>
			<if test="comment != null">
				#{comment,jdbcType=VARCHAR},
			</if>
			<if test="profile != null">
				#{profile,jdbcType=VARCHAR},
			</if>
			<if test="hobby != null">
				#{hobby,jdbcType=VARCHAR},
			</if>
			<if test="lastloginTime != null">
				#{lastloginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="ucUserId != null">
				#{ucUserId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.gxr.com.entity.User">
		update us_user
		<set>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				nickname = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="firstname != null">
				firstname = #{firstname,jdbcType=VARCHAR},
			</if>
			<if test="lastname != null">
				lastname = #{lastname,jdbcType=VARCHAR},
			</if>
			<if test="fullName != null">
				full_name = #{fullName,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=DATE},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="country != null">
				country = #{country,jdbcType=VARCHAR},
			</if>
			<if test="language != null">
				language = #{language,jdbcType=VARCHAR},
			</if>
			<if test="zoneId != null">
				zone_id = #{zoneId,jdbcType=INTEGER},
			</if>
			<if test="brief != null">
				brief = #{brief,jdbcType=VARCHAR},
			</if>
			<if test="roles != null">
				roles = #{roles,jdbcType=VARCHAR},
			</if>
			<if test="originalUrl != null">
				original_url = #{originalUrl,jdbcType=VARCHAR},
			</if>
			<if test="imageUrl != null">
				image_url = #{imageUrl,jdbcType=VARCHAR},
			</if>
			<if test="postcode != null">
				postcode = #{postcode,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="identity != null">
				identity = #{identity,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="comefrom != null">
				comefrom = #{comefrom,jdbcType=VARCHAR},
			</if>
			<if test="comment != null">
				comment = #{comment,jdbcType=VARCHAR},
			</if>
			<if test="profile != null">
				profile = #{profile,jdbcType=VARCHAR},
			</if>
			<if test="hobby != null">
				hobby = #{hobby,jdbcType=VARCHAR},
			</if>
			<if test="lastloginTime != null">
				lastlogin_time = #{lastloginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="ucUserId != null">
				ucuserid=#{ucUserId,jdbcType=INTEGER},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>

	<!-- 根据邮箱查询用户注册信息 findUserByPassword -->
	<select id="findUserByemail" parameterType="com.gxr.com.entity.User"
		resultType="INTEGER">
		SELECT COUNT(1) FROM us_user WHERE email=#{email}
	</select>
	<select id="findByEmailPassword" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from us_user
		where email = #{email,jdbcType=VARCHAR} and password =
		#{password,jdbcType=VARCHAR}
	</select>

	<!-- 根据昵称查询注册信息 -->
	<select id="findUserByNickname" parameterType="com.gxr.com.entity.User"
		resultType="INTEGER">
		SELECT COUNT(nickname) FROM us_user WHERE
		nickname=#{nickname}
	</select>
	
	<!-- 根据密码查询注册信息 -->
	<select id="findUserByPassword" parameterType="com.gxr.com.entity.User"
		resultType="INTEGER">
		SELECT COUNT(password) FROM us_user WHERE
		password=#{password}
	</select>
	<!-- 根据昵称查询用户信息 -->
	<select id="findUserByNickname2" parameterType="com.gxr.com.entity.User"
		resultType="com.gxr.com.entity.User">
		select
		nickname,country,sex,language,zone_id,brief from
		us_user where
		nickname=#{nickname}
	</select>
	<!-- 根据用户邮箱邮箱修改密码 -->
	<update id="updatePassword" parameterType="com.gxr.com.entity.User">
		UPDATE
		us_user SET
		 password=#{password} WHERE email=#{email}
	</update>
	
	<!-- 根据邮箱查查询用户信息 -->
	<select id="findEmail" parameterType="com.gxr.com.entity.User"
		resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM us_user WHERE email=#{email};
	</select>
	<!-- 根据邮箱查查询用户信息 -->
	<select id="findUserEmail" parameterType="com.gxr.com.entity.User"
		resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM us_user WHERE email=#{email};
	</select>
	<!-- 根据用户id查询时区 -->
	<select id="findUserIdByzoneId" parameterType="java.lang.Integer"
		resultType="java.util.Map">
		SELECT
		zone_id
		FROM
		us_user
		WHERE
		user_id = #{userId};
	</select>
	
	<!-- 校验邮箱和密码 -->
	<select id="checkEmailPasdsword" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT COUNT(*) FROM us_user WHERE
		email=#{email} AND `password`=#{password}

	</select>


	<update id="updateByPrimaryKey" parameterType="com.gxr.com.entity.User">
		update us_user
		set
		password = #{password,jdbcType=VARCHAR},
		nickname =
		#{nickname,jdbcType=VARCHAR},
		firstname =
		#{firstname,jdbcType=VARCHAR},
		lastname = #{lastname,jdbcType=VARCHAR},
		full_name = #{fullName,jdbcType=VARCHAR},
		sex =
		#{sex,jdbcType=INTEGER},
		birthday = #{birthday,jdbcType=DATE},
		phone =
		#{phone,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		country =
		#{country,jdbcType=VARCHAR},
		language = #{language,jdbcType=VARCHAR},
		zone_id = #{zoneId,jdbcType=INTEGER},
		brief =
		#{brief,jdbcType=VARCHAR},
		roles = #{roles,jdbcType=VARCHAR},
		original_url = #{originalUrl,jdbcType=VARCHAR},
		image_url =
		#{imageUrl,jdbcType=VARCHAR},
		postcode = #{postcode,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		identity =
		#{identity,jdbcType=INTEGER},
		state = #{state,jdbcType=INTEGER},
		comefrom = #{comefrom,jdbcType=VARCHAR},
		comment =
		#{comment,jdbcType=VARCHAR},
		profile = #{profile,jdbcType=VARCHAR},
		hobby = #{hobby,jdbcType=VARCHAR},
		lastlogin_time =
		#{lastloginTime,jdbcType=TIMESTAMP}
		where user_id =
		#{userId,jdbcType=INTEGER}
	</update>

	<select id="selectUserRoleByUserId" parameterType="java.lang.Integer"
		resultType="string">
		<!-- SELECT r.role_name roleName FROM us_user u,us_role r, us_user_role 
			ur WHERE u.user_id=ur.user_id AND ur.role_id=r.role_id AND u.user_id=#{0,jdbcType=INTEGER} 
			AND r.role_id=( SELECT MAX(r.role_id) FROM us_user u,us_role r, us_user_role 
			ur WHERE u.user_id=ur.user_id AND r.role_id=ur.role_id AND u.user_id=#{0,jdbcType=INTEGER}) -->
	</select>
	<!-- 根据名称查询用户列表 -->
	<select id="findUserByFullname" parameterType="com.gxr.com.entity.User"
		resultMap="BaseResultMap">
		SELECT 
		   u.*
		 FROM us_user u,us_teacher t
		 where u.user_id = t.user_id
		 <if test="fullname != null">
				and( t.fullname like CONCAT('%',#{fullname},'%')
				or u.nickname like CONCAT('%',#{fullname},'%'))
		 </if>
		order by user_id desc
		<if test="from != null  and  rows != null ">
			limit #{ from},#{ rows}
		</if>
	</select>
	<!-- 根据名称查询用户列表数量 -->
	<select id="findUserByFullnameCount" parameterType="com.gxr.com.entity.User"
		resultType="int">
		SELECT IFNULL(count(u.user_id),0)  as total
		 FROM us_user u,us_teacher t
		 where u.user_id = t.user_id
		 <if test="fullname != null">
				and (t.fullname like CONCAT('%',#{fullname},'%')
				or u.nickname like CONCAT('%',#{fullname},'%'))
		 </if>
	</select>
	<!-- 用户统计 -->
	<select id="findUserCount" parameterType="java.util.Map"
		resultType="int">
		SELECT IFNULL(count(user_id),0)  as total
		 FROM us_user 
		 <where>
		  <if test="roles!=null and roles!=''">
		   roles=#{roles}
		  </if>
		 </where> 
		
	</select>
	<!-- 根据名称查询用户列表  查询审核通过的 -->
	<select id="searchTeacher" parameterType="com.gxr.com.entity.User"
		resultType="java.util.Map">
		SELECT 
		   u.user_id,u.nickname,u.image_url,u.language,IFNULL(t.seniority,0) seniority
		 FROM us_user u,us_teacher t
		 where u.user_id = t.user_id
		 and t.flag=2
		 <if test="fullname != null">
				and( t.fullname like CONCAT('%',#{fullname},'%')
				or u.nickname like CONCAT('%',#{fullname},'%'))
		 </if>
		order by user_id desc
		<if test="from != null  and  rows != null ">
			limit #{ from},#{ rows}
		</if>
	</select>
	<!-- 根据名称查询用户列表数量  查询审核通过的 -->
	<select id="searchTeacherCount" parameterType="com.gxr.com.entity.User"
		resultType="int">
		SELECT IFNULL(count(u.user_id),0)  as total
		 FROM us_user u,us_teacher t
		 where u.user_id = t.user_id
		 and t.flag=2
		 <if test="fullname != null">
				and( t.fullname like CONCAT('%',#{fullname},'%')
				or u.nickname like CONCAT('%',#{fullname},'%'))
		 </if>
	</select>

	<!-- 查询用户信息 -->
	<select id="queryUsUser" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from us_user
    <where>
        <if test="user_id !=null"> and user_id=#{user_id} </if>
		<if test="wordType=='nickname'"> and nickname like '%${keyword}%' </if>
		<if test="wordType=='email'"> and 	email like '%${keyword}%' </if>
		<if test="regist_time_begin !=null"> and  create_time &gt;=#{regist_time_begin}</if>
		<if test="regist_time_end !=null"> and  create_time &lt;=#{regist_time_end}</if>
		<if test="comefrom !=null"> and comefrom like '%#{comefrom}%' </if>
    </where>    
  </select>
</mapper>